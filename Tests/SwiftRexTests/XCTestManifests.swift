#if !canImport(ObjectiveC)
import XCTest

extension BypassMiddlewareTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BypassMiddlewareTests = [
        ("testBypassMiddlewareAction", testBypassMiddlewareAction),
        ("testBypassMiddlewareEvent", testBypassMiddlewareEvent),
    ]
}

extension ComposedMiddlewareTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ComposedMiddlewareTests = [
        ("testComposedMiddlewareAction", testComposedMiddlewareAction),
        ("testComposedMiddlewareEvent", testComposedMiddlewareEvent),
        ("testComposedMiddlewareOrderAction", testComposedMiddlewareOrderAction),
        ("testComposedMiddlewareOrderEvent", testComposedMiddlewareOrderEvent),
        ("testMiddlewareActionHandlerPropagationOnAppend", testMiddlewareActionHandlerPropagationOnAppend),
        ("testMiddlewareActionHandlerPropagationOnInit", testMiddlewareActionHandlerPropagationOnInit),
    ]
}

extension DirectLineMiddlewareTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DirectLineMiddlewareTests = [
        ("testDirectLineMiddlewareAction", testDirectLineMiddlewareAction),
        ("testDirectLineMiddlewareEvent", testDirectLineMiddlewareEvent),
        ("testDirectLineMiddlewareEventThatIsAnAction", testDirectLineMiddlewareEventThatIsAnAction),
    ]
}

extension GeneralMiddlewareTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GeneralMiddlewareTests = [
        ("testAnyMiddlewareAction", testAnyMiddlewareAction),
        ("testAnyMiddlewareEvent", testAnyMiddlewareEvent),
        ("testAnyMiddlewareHandlersGet", testAnyMiddlewareHandlersGet),
        ("testAnyMiddlewareHandlersSet", testAnyMiddlewareHandlersSet),
        ("testMessageHandlerAction", testMessageHandlerAction),
        ("testMessageHandlerEvent", testMessageHandlerEvent),
        ("testRotationMiddlewareAction", testRotationMiddlewareAction),
        ("testRotationMiddlewareEvent", testRotationMiddlewareEvent),
    ]
}

extension PipelineMiddlewareTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PipelineMiddlewareTests = [
        ("testPipelineMiddlewareActionIgnore", testPipelineMiddlewareActionIgnore),
        ("testPipelineMiddlewareActionTransformPipeline", testPipelineMiddlewareActionTransformPipeline),
        ("testPipelineMiddlewareEventIgnore", testPipelineMiddlewareEventIgnore),
        ("testPipelineMiddlewareEventTransformPipeline", testPipelineMiddlewareEventTransformPipeline),
    ]
}

extension ReactiveWrappersTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ReactiveWrappersTests = [
        ("testGenericSubscriptionCollectionAppend", testGenericSubscriptionCollectionAppend),
        ("testPublisherTypeAssertNoFailureOnValue", testPublisherTypeAssertNoFailureOnValue),
        ("testPublisherTypeOnError", testPublisherTypeOnError),
        ("testPublisherTypeOnValue", testPublisherTypeOnValue),
        ("testReplaySubjectTypeMutate", testReplaySubjectTypeMutate),
        ("testReplaySubjectTypeOnError", testReplaySubjectTypeOnError),
        ("testReplaySubjectTypeOnValue", testReplaySubjectTypeOnValue),
        ("testSubjectTypeOnError", testSubjectTypeOnError),
        ("testSubjectTypeOnValue", testSubjectTypeOnValue),
        ("testSubscriberTypeAssertNoFailureOnErrorAfter", testSubscriberTypeAssertNoFailureOnErrorAfter),
        ("testSubscriberTypeAssertNoFailureOnValue", testSubscriberTypeAssertNoFailureOnValue),
        ("testSubscriberTypeOnError", testSubscriberTypeOnError),
        ("testSubscriberTypeOnValue", testSubscriberTypeOnValue),
        ("testSubscriptionCollectionAppend", testSubscriptionCollectionAppend),
    ]
}

extension ReducerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ReducerTests = [
        ("testAnyReducer", testAnyReducer),
        ("testComposeThreeReducers", testComposeThreeReducers),
        ("testComposeTwoGroupsOfReducers", testComposeTwoGroupsOfReducers),
        ("testComposeTwoLiftedReducers", testComposeTwoLiftedReducers),
        ("testComposeTwoReducers", testComposeTwoReducers),
        ("testEmptyReducer", testEmptyReducer),
        ("testLiftReducer", testLiftReducer),
        ("testNameReducerAction1", testNameReducerAction1),
        ("testNameReducerAction2", testNameReducerAction2),
        ("testNameReducerAction3", testNameReducerAction3),
    ]
}

extension StoreBaseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StoreBaseTests = [
        ("testStoreFullWorkflow", testStoreFullWorkflow),
    ]
}

extension SubstateMiddlewareTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SubstateMiddlewareTests = [
        ("testSubstateMiddlewareAction", testSubstateMiddlewareAction),
        ("testSubstateMiddlewareEvent", testSubstateMiddlewareEvent),
        ("testSubstateMiddlewareHandlers", testSubstateMiddlewareHandlers),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BypassMiddlewareTests.__allTests__BypassMiddlewareTests),
        testCase(ComposedMiddlewareTests.__allTests__ComposedMiddlewareTests),
        testCase(DirectLineMiddlewareTests.__allTests__DirectLineMiddlewareTests),
        testCase(GeneralMiddlewareTests.__allTests__GeneralMiddlewareTests),
        testCase(PipelineMiddlewareTests.__allTests__PipelineMiddlewareTests),
        testCase(ReactiveWrappersTests.__allTests__ReactiveWrappersTests),
        testCase(ReducerTests.__allTests__ReducerTests),
        testCase(StoreBaseTests.__allTests__StoreBaseTests),
        testCase(SubstateMiddlewareTests.__allTests__SubstateMiddlewareTests),
    ]
}
#endif
